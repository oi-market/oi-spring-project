<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.market.oi.myPage.MyPageMapper">

	 <resultMap type="ProductVO" id="product">
 		<id property="num" column="num"></id>
 		<result property="title" column="title"></result>
 		<result property="categoryNum" column="categoryNum"></result>
 		<result property="price" column="price"></result>
 		<result property="contents" column="contents"></result>
 		<result property="sale" column="sale"></result>
 		<result property="regDate" column="regDate"></result>
 		<result property="location" column="location"></result>
 		<result property="hit" column="hit"></result>
 		<result property="wish" column="wish"></result>
 	 </resultMap>	 
 	<resultMap type="ProductfilesVO" id="ProductfilesMap">
 		<id property="fileNum" column="fileNum"/>
 		<result property="productNum" column="productNum"/>
 		<result property="thumbnail" column="thumbnail"/>
 		<result property="fileName" column="fileName"/>
 		<result property="ogName" column="ogName"/>
 	</resultMap> 	 
 	<resultMap type="ReviewVO" id="ReviewVOMap">
 		<id property="num" column="num"/>
 		<result property="productNum" column="productNum"/>
 		<result property="contents" column="contents"/>
 		<result property="regDate" column="regDate"/>
 		<result property="reciver" column="reciver"/>
 		<result property="writer" column="writer"/>
 		<result property="score" column="score"/>
 		<result property="writerPosition" column="writerPosition"/>
 
 	</resultMap> 	 
 	
 	<resultMap type="PFileVO" id="PFileMap">
		<collection property="productfilesVO" resultMap="ProductfilesMap"/>		
		<collection property="productVO" resultMap="product"/>
	</resultMap>
 	<resultMap type="PFileVO" id="PFileReviewMap">
		<collection property="productfilesVO" resultMap="ProductfilesMap"/>		
		<collection property="productVO" resultMap="product"/>
		<collection property="reviewVO" resultMap="ReviewVOMap"/>
	</resultMap>
 
	<!-- 판매 중 상품 리스트 -->
	<select id="getList" parameterType="MemberVO" resultMap="PFileMap">
		SELECT P.*, PF.* FROM product P LEFT JOIN productfiles PF ON P.num = PF.productNum WHERE P.username=#{username} AND P.sale=1 GROUP BY P.num ORDER BY P.num desc
	</select>
	
	<!-- 판매완료 상품 리스트 -->
	<select id="getSellList" parameterType="MemberVO" resultMap="PFileReviewMap">
		select * from
(SELECT P.*, PF.*
FROM product P LEFT JOIN productfiles PF
ON P.num = PF.productNum) A left join review R
on A.num = R.productNum
WHERE A.username=#{username} AND A.sale=0
GROUP BY A.num
ORDER BY A.num desc
	</select>
	
	<resultMap type="MywishVO" id="wishMap">
		<id column="num" property="num"/>
		<result column="username" property="username"/>
		<result column="productNum" property="productNum"/>
		<result column="amount" property="amount"/>
	</resultMap>	
	<resultMap type="ProductVO" id="ProductMap">
		<id column="num" property="num"/>
		<result column="title" property="title"/>
		<result column="categoryNum" property="categoryNum"/>
		<result column="price" property="price"/>
		<result column="contents" property="contents"/>
		<result column="sale" property="sale"/>
		<result column="regDate" property="regDate"/>
		<result column="username" property="username"/>
		<result column="location" property="location"/>
		<result column="hit" property="hit"/>
		<result column="wish" property="wish"/>
	</resultMap>
	<resultMap type="ProductfilesVO" id="PFMap">
 		<id property="fileNum" column="fileNum"/>
 		<result property="productNum" column="productNum"/>
 		<result property="thumbnail" column="thumbnail"/>
 		<result property="fileName" column="fileName"/>
 		<result property="ogName" column="ogName"/>
 	</resultMap> 
 	
	<resultMap type="PWishVO" id="PWishMap">
		<collection property="productfilesVO" resultMap="PFMap"/>
		<collection property="mywishVO" resultMap="wishMap"/>		
		<collection property="productVO" resultMap="ProductMap"/>
	</resultMap>
	
	
	<resultMap type="commentsVO" id="commentsMap">
			<id column="num" property="num"/>
			<result column="communityNum" property="communityNum"/>
			<result column="writer" property="writer"/>
			<result column="contents" property="contents"/>
			<result column="location" property="location"/>
			<result column="regDate" property="regDate"/>
			<result column="ref" property="ref"/>
			<result column="step" property="step"/>
			<result column="depth" property="depth"/>
			<result column="nickName" property="nickName"/>
			<association property="communityVO" javaType="communityVO">
			<result column="categoryNum" property="categoryNum"/>
			<result column="comcon" property="contents"/>
			</association>
			</resultMap>
	
	<!-- 관심 상품 목록 -->
	<select id="getMywish" parameterType="MemberVO" resultMap="PWishMap">
		SELECT P.*, PF.* FROM product P LEFT JOIN productfiles PF ON P.num = PF.productNum LEFT JOIN mywish M ON P.num = M.productNum WHERE M.username=#{username} group BY P.num ORDER BY M.num DESC
	</select>
 
	<!-- 상품 상세정보 select -->
	<select id="getSelect" parameterType="ProductVO" resultMap="PFileMap">
		select P.*, PF.* from product P left join productFiles PF on P.num=PF.productNum where P.num = #{num}
	</select>
		
	<!-- hit update -->
	<update id="setHitUpdate" parameterType="ProductVO">
		update product set hit = hit+1 where num = #{num}
	</update>

	<!-- 판매완료로 변경 -->
	<update id="soldoutUpdate" parameterType="ProductVO">
		update product set sale=0 where num=#{num}
	</update>
	
	<!-- 거래중으로 변경 -->
	<update id="sellUpdate" parameterType="ProductVO">
		update product set sale=1 where num=#{num}
	</update>
		
	<!-- 상품 삭제 -->
	<delete id="setDelete" parameterType="ProductVO">
		delete from product where num = #{num}
	</delete>
	
	<resultMap type="ProductVO" id="oproduct">
 		<id property="num" column="num"></id>
 		<result property="title" column="title"></result>
 		<result property="categoryNum" column="categoryNum"></result>
 		<result property="price" column="price"></result>
 		<result property="contents" column="contents"></result>
 		<result property="sale" column="sale"></result>
 		<result property="regDate" column="regDate"></result>
 		<result property="location" column="location"></result>
 		<result property="hit" column="hit"></result>
 		<result property="wish" column="wish"></result>
 	 </resultMap>	 
 	<resultMap type="ProductfilesVO" id="Productfiles">
 		<id property="fileNum" column="fileNum"/>
 		<result property="productNum" column="productNum"/>
 		<result property="thumbnail" column="thumbnail"/>
 		<result property="fileName" column="fileName"/>
 		<result property="ogName" column="ogName"/>
 	</resultMap> 
 	<resultMap type="OrderCompleteVO" id="OrderCompleteMap">
 		<id property="num" column="num"/>
 		<result property="seller" column="seller"/>
 		<result property="buyer" column="buyer"/>
 		<result property="productNum" column="productNum"/>
 	</resultMap>  
 	 	
 	<resultMap type="OrderPFileVO" id="OrderPFileMap">
		<collection property="productfilesVO" resultMap="Productfiles"/>		
		<collection property="productVO" resultMap="oproduct"/>
		<collection property="ordercompleteVO" resultMap="OrderCompleteMap"/>
		<collection property="reviewVO" resultMap="ReviewVOMap"/>
		
	</resultMap>
	
	<!-- 내가 구매한 상품 -->
	<select id="getBuyList" parameterType="MemberVO" resultMap="OrderPFileMap">
	SELECT * FROM product P
LEFT JOIN productfiles PF
ON p.num = PF.productNum LEFT JOIN ordercomplete O ON P.num = O.productNum left join review R on p.num = R.productNum
WHERE O.buyer =#{username}
GROUP BY P.num ORDER BY O.num DESC
	</select>
	
	<!-- 관심 상품 삭제 -->  
	<delete id="setWishDelete" parameterType="MyWishVO">
		delete from mywish where productNum = (select productNum from mywish where productNum = #{productNum})
	</delete>
	
	<!-- 관심 수 -->
	<update id="likeUpdate" parameterType="ProductVO">
		update product set wish = wish+1 where num = #{num}
	</update>
	
	<!-- 관심 해제 -->
	<update id="likeDelete" parameterType="MywishVO">
		update product set wish = wish-1 where num = (select productNum from mywish where productNum = #{productNum})
	</update>
	
	<!-- 페이징 처리 
	<select id="getTotalCount" resultType="java.lang.Long">
		select count(num) from product
	</select> -->
	
	<!-- 리뷰 리스트 -->
	<select id="getReviewList" parameterType="MemberVO" resultType="ReviewVO">
		select * from review where reciver = #{username} or writer = #{username} ORDER BY num desc
	</select>
	
	<!-- 프로필에서 내가 받은 리뷰 띄우기 -->
	<select id="getMyReview" parameterType="MemberVO" resultType="ReviewVO">
		select * from review where reciver = #{username} ORDER BY num desc
	</select>
	
	<!-- 내가 작성한 리뷰 -->
	<select id="getSeller" parameterType="MemberVO" resultType="ReviewVO">
		SELECT R.* FROM review R LEFT JOIN product P ON R.productNum = P.num WHERE R.writer = #{username} ORDER BY num desc
	</select>
	
	<!-- 내가 받은 리뷰 -->
	<select id="getBuyer" parameterType="MemberVO" resultType="ReviewVO">
		SELECT R.* FROM review R LEFT JOIN product P ON R.productNum = P.num WHERE R.reciver = #{username} ORDER BY num desc
	</select>
	
	<!-- 리뷰 작성 -->
	<insert id="setReview" parameterType="ReviewVO">
		insert into review (num, productNum, writer, reciver, contents, regDate, score, writerPosition) values
		(#{num}, #{productNum} , #{writer}, #{reciver}, #{contents}, now() , #{score}, #{writerPosition})
	</insert>
	
	<!-- 리뷰 쓰기위해 상품테이블에서 정보 받아가기 -->
	<select id="reviewInsert" parameterType="ProductVO" resultType="ProductVO">
		select P.*, O.* from product P left join ordercomplete O on P.num = O.productNum where P.num = #{num}
	</select>

	<select id="seller" parameterType="ProductVO" resultType="java.lang.String">
		SELECT O.seller FROM ordercomplete O left join product P on O.productNum=P.num where P.num = #{num} 
	</select>
	
	<select id="buyer" parameterType="ProductVO" resultType="java.lang.String">
		select O.buyer from ordercomplete O left join product P on O.productNum=P.num where P.num=#{num}
	</select>
	
	<select id="getUser" parameterType="ProductVO" resultType="java.lang.String">
		SELECT username FROM product P LEFT JOIN ordercomplete O ON O.productNum=P.num where P.num=#{num}
	</select>
	
	<select id="userbuy" parameterType="MemberVO" resultType="java.lang.String">
		select buyer from ordercomplete where buyer=#{username}
	</select>
	
	<select id="getComment" parameterType="commentsVO" resultMap="commentsMap">
		select R.*, COM.contents as comcon from
			(select C.*,CM.categoryNum from comments C left join community CM on C.communityNum=CM.num where C.writer = #{writer}) R
			inner join community COM on R.communityNum=COM.num order by num desc
	</select>
	
	<select id="getcommunity" parameterType="communityVO" resultType="communityVO">
		select * from community
		where communityNum in
		(select C.communityNum from comments C left join community CM on C.communityNum=CM.num where C.writer = #{writer})
	</select>

	<!-- 내가 쓴 동네 글 -->
	<select id="getVillage" parameterType="MemberVO" resultType="CommunityVO">
		select * from community where writer = #{username}
	</select>
	
	<!-- 전체 리뷰 카운트 -->
	<select id="countReview" parameterType="MemberVO" resultType="long" >
		select count(*) from review where reciver=#{username} or writer=#{username}
    </select>
    
    <!-- 판매자 작성 리뷰 카운트 -->
    <select id="countSeller" parameterType="MemberVO" resultType="long" >
		select count(*) from review where  writer = #{username}
    </select>
    
    <!-- 구매자 작성 리뷰 카운트 -->
    <select id="countBuyer" parameterType="MemberVO" resultType="long" >
		select count(*) from review where  reciver = #{username}
    </select>
    
    <!-- 동네생활 글의 댓글 카운트 -->
    <select id="countComments" parameterType="CommentsVO" resultType="Long">
        select count(num) from comments where communityNum = #{communityNum}  
  	</select>

</mapper>