<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.market.oi.member.MemberMapper">

	<resultMap type="MemberVO" id="memberLoginResult">
			<id column="username" property="username"/>
			<result column="password" property="password"/>
			<result column="name" property="name"/>
			<result column="email" property="email"/>
			<result column="nickName" property="nickName"/>
			<result column="phone" property="phone"/>
			<result column="location" property="location"/>
			<result column="wgs84X" property="wgs84X"/>
			<result column="wgs84Y" property="wgs84Y"/>
			<result column="radius" property="radius"/>
			<association property="memberFileVO" javaType="MemberFileVO">
			<result column="fileName" property="fileName"/>
			<result column="ogName" property="ogName"/>
			</association>
			<collection property="roles" javaType="java.util.List" ofType="RoleVO">
				<id column="roleNum" property="roleNum"/>
				<result column="roleName" property="roleName"/>
			</collection>
		
		</resultMap>




		<insert id="memberJoin" parameterType="MemberVO">
			insert into member (username, password, name, nickName, email, phone, location, wgs84X, wgs84Y, radius)
			values (#{username}, #{password}, #{name}, #{nickName}, #{email}, #{phone}, #{location}, #{wgs84X}, #{wgs84Y},50)
		</insert> 

		<select id="getUsername" parameterType="MemberVO" resultType="MemberVO">
			select * from member where username=#{username}
		</select>
		
		<insert id="setMemberRole" parameterType="java.util.Map">
			insert into memberrole (username, roleNum)
			values (#{username}, (select roleNum from role where roleName=#{roleName}))
		</insert>
		
		<select id="memberLogin" parameterType="MemberVO" resultMap="memberLoginResult">
         
         SELECT M.*, R.* ,MF.*
			FROM member M LEFT JOIN memberrole MR
			ON M.username=MR.username
			LEFT JOIN role R
			ON MR.roleNum = R.roleNum 
			LEFT OUTER JOIN memberfiles MF
			ON M.username=MF.username 
			WHERE M.username=#{username}
      </select>
      
      <select id="memberFindID" parameterType="MemberVO" resultType="MemberVO">
      select * from member where email=#{email} and name =#{name} and phone= #{phone}
      </select>
      
      <select id="memberFindPW" parameterType="MemberVO" resultType="MemberVO">
      select * from member where username=#{username} and email=#{email} and name =#{name}
      </select>
      
       <update id="memberUpdatePW" parameterType="MemberVO">
      update member set password=#{password} where username=#{username}      
      </update>
      
      <update id="memberUpdate" parameterType="MemberVO">
      update member set name=#{name},nickName=#{nickName},email=#{email},phone=#{phone} where username=#{username}      
      </update>
      
      
      <delete id="memberDelete" parameterType="MemberVO">
		delete from member where username=#{username}
	  </delete>
      

      	<insert id="setJoinFile" parameterType="MemberFileVO">
			insert into memberfiles (username, fileName, ogName) 
			values(#{username}, #{fileName}, #{ogName})
		</insert>
		
		<delete id="delImage" parameterType="MemberFileVO">
		delete FROM memberfiles WHERE username=#{username}
	   </delete>
	   

		
		<select id="selectImage" parameterType="MemberVO" resultType="MemberFileVO">
			select * from memberfiles where username=#{username}
		</select>
		
		
		<select id="Score" parameterType="MemberVO" resultType="double" >
			select avg(score) from oi.review where reciver = #{username}
		</select>
		
		
      
      <update id="memberUpdateRadius" parameterType="MemberVO">
      		update member set radius=#{radius} where username=#{username}      
      </update>
      
      
      <update id="memberUpdateLocation" parameterType="MemberVO">
      		update member set location=#{location},wgs84X=#{wgs84X},wgs84Y=#{wgs84Y} where username=#{username}      
      </update>
      
      <select id="countScore" parameterType="MemberVO" resultType="long" >
			select count(score) from oi.review where reciver = #{username}
		</select>
		
		<select id="countProduct" parameterType="MemberVO" resultType="long" >
			select count(sale) from product where username = #{username} and sale=1
		</select>
      

		<select id="getChatMembers" parameterType="MemberVO" resultType="MemberVO">
			select S.* from
		(select * from member
		where username in (select senderID from chat where receiverID=#{username}) ) S
		where S.username != #{username};
		</select>
</mapper>
		

